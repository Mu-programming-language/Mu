/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class APlusElementArithmetic extends PElementArithmetic
{
    private PElementArithmetic _elementArithmetic_;
    private TPlus _plus_;
    private PElementFactor _elementFactor_;

    public APlusElementArithmetic()
    {
        // Constructor
    }

    public APlusElementArithmetic(
        @SuppressWarnings("hiding") PElementArithmetic _elementArithmetic_,
        @SuppressWarnings("hiding") TPlus _plus_,
        @SuppressWarnings("hiding") PElementFactor _elementFactor_)
    {
        // Constructor
        setElementArithmetic(_elementArithmetic_);

        setPlus(_plus_);

        setElementFactor(_elementFactor_);

    }

    @Override
    public Object clone()
    {
        return new APlusElementArithmetic(
            cloneNode(this._elementArithmetic_),
            cloneNode(this._plus_),
            cloneNode(this._elementFactor_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPlusElementArithmetic(this);
    }

    public PElementArithmetic getElementArithmetic()
    {
        return this._elementArithmetic_;
    }

    public void setElementArithmetic(PElementArithmetic node)
    {
        if(this._elementArithmetic_ != null)
        {
            this._elementArithmetic_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._elementArithmetic_ = node;
    }

    public TPlus getPlus()
    {
        return this._plus_;
    }

    public void setPlus(TPlus node)
    {
        if(this._plus_ != null)
        {
            this._plus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._plus_ = node;
    }

    public PElementFactor getElementFactor()
    {
        return this._elementFactor_;
    }

    public void setElementFactor(PElementFactor node)
    {
        if(this._elementFactor_ != null)
        {
            this._elementFactor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._elementFactor_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._elementArithmetic_)
            + toString(this._plus_)
            + toString(this._elementFactor_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._elementArithmetic_ == child)
        {
            this._elementArithmetic_ = null;
            return;
        }

        if(this._plus_ == child)
        {
            this._plus_ = null;
            return;
        }

        if(this._elementFactor_ == child)
        {
            this._elementFactor_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._elementArithmetic_ == oldChild)
        {
            setElementArithmetic((PElementArithmetic) newChild);
            return;
        }

        if(this._plus_ == oldChild)
        {
            setPlus((TPlus) newChild);
            return;
        }

        if(this._elementFactor_ == oldChild)
        {
            setElementFactor((PElementFactor) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
