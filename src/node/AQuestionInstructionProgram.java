/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AQuestionInstructionProgram extends PProgram
{
    private TQuestion _question_;
    private TColumn _column_;
    private PQuestionInstructionList _questionInstructionList_;

    public AQuestionInstructionProgram()
    {
        // Constructor
    }

    public AQuestionInstructionProgram(
        @SuppressWarnings("hiding") TQuestion _question_,
        @SuppressWarnings("hiding") TColumn _column_,
        @SuppressWarnings("hiding") PQuestionInstructionList _questionInstructionList_)
    {
        // Constructor
        setQuestion(_question_);

        setColumn(_column_);

        setQuestionInstructionList(_questionInstructionList_);

    }

    @Override
    public Object clone()
    {
        return new AQuestionInstructionProgram(
            cloneNode(this._question_),
            cloneNode(this._column_),
            cloneNode(this._questionInstructionList_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAQuestionInstructionProgram(this);
    }

    public TQuestion getQuestion()
    {
        return this._question_;
    }

    public void setQuestion(TQuestion node)
    {
        if(this._question_ != null)
        {
            this._question_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._question_ = node;
    }

    public TColumn getColumn()
    {
        return this._column_;
    }

    public void setColumn(TColumn node)
    {
        if(this._column_ != null)
        {
            this._column_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._column_ = node;
    }

    public PQuestionInstructionList getQuestionInstructionList()
    {
        return this._questionInstructionList_;
    }

    public void setQuestionInstructionList(PQuestionInstructionList node)
    {
        if(this._questionInstructionList_ != null)
        {
            this._questionInstructionList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._questionInstructionList_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._question_)
            + toString(this._column_)
            + toString(this._questionInstructionList_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._question_ == child)
        {
            this._question_ = null;
            return;
        }

        if(this._column_ == child)
        {
            this._column_ = null;
            return;
        }

        if(this._questionInstructionList_ == child)
        {
            this._questionInstructionList_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._question_ == oldChild)
        {
            setQuestion((TQuestion) newChild);
            return;
        }

        if(this._column_ == oldChild)
        {
            setColumn((TColumn) newChild);
            return;
        }

        if(this._questionInstructionList_ == oldChild)
        {
            setQuestionInstructionList((PQuestionInstructionList) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
