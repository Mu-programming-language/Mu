/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class ASet extends PSet
{
    private TLeftBrace _leftBrace_;
    private TElementIdentifier _elementIdentifier_;
    private TElementOf _elementOf_;
    private TSetIdentifier _setIdentifier_;
    private TSuchAs _suchAs_;
    private PExpression _expression_;
    private TRightBrace _rightBrace_;

    public ASet()
    {
        // Constructor
    }

    public ASet(
        @SuppressWarnings("hiding") TLeftBrace _leftBrace_,
        @SuppressWarnings("hiding") TElementIdentifier _elementIdentifier_,
        @SuppressWarnings("hiding") TElementOf _elementOf_,
        @SuppressWarnings("hiding") TSetIdentifier _setIdentifier_,
        @SuppressWarnings("hiding") TSuchAs _suchAs_,
        @SuppressWarnings("hiding") PExpression _expression_,
        @SuppressWarnings("hiding") TRightBrace _rightBrace_)
    {
        // Constructor
        setLeftBrace(_leftBrace_);

        setElementIdentifier(_elementIdentifier_);

        setElementOf(_elementOf_);

        setSetIdentifier(_setIdentifier_);

        setSuchAs(_suchAs_);

        setExpression(_expression_);

        setRightBrace(_rightBrace_);

    }

    @Override
    public Object clone()
    {
        return new ASet(
            cloneNode(this._leftBrace_),
            cloneNode(this._elementIdentifier_),
            cloneNode(this._elementOf_),
            cloneNode(this._setIdentifier_),
            cloneNode(this._suchAs_),
            cloneNode(this._expression_),
            cloneNode(this._rightBrace_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASet(this);
    }

    public TLeftBrace getLeftBrace()
    {
        return this._leftBrace_;
    }

    public void setLeftBrace(TLeftBrace node)
    {
        if(this._leftBrace_ != null)
        {
            this._leftBrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._leftBrace_ = node;
    }

    public TElementIdentifier getElementIdentifier()
    {
        return this._elementIdentifier_;
    }

    public void setElementIdentifier(TElementIdentifier node)
    {
        if(this._elementIdentifier_ != null)
        {
            this._elementIdentifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._elementIdentifier_ = node;
    }

    public TElementOf getElementOf()
    {
        return this._elementOf_;
    }

    public void setElementOf(TElementOf node)
    {
        if(this._elementOf_ != null)
        {
            this._elementOf_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._elementOf_ = node;
    }

    public TSetIdentifier getSetIdentifier()
    {
        return this._setIdentifier_;
    }

    public void setSetIdentifier(TSetIdentifier node)
    {
        if(this._setIdentifier_ != null)
        {
            this._setIdentifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._setIdentifier_ = node;
    }

    public TSuchAs getSuchAs()
    {
        return this._suchAs_;
    }

    public void setSuchAs(TSuchAs node)
    {
        if(this._suchAs_ != null)
        {
            this._suchAs_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._suchAs_ = node;
    }

    public PExpression getExpression()
    {
        return this._expression_;
    }

    public void setExpression(PExpression node)
    {
        if(this._expression_ != null)
        {
            this._expression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expression_ = node;
    }

    public TRightBrace getRightBrace()
    {
        return this._rightBrace_;
    }

    public void setRightBrace(TRightBrace node)
    {
        if(this._rightBrace_ != null)
        {
            this._rightBrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rightBrace_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._leftBrace_)
            + toString(this._elementIdentifier_)
            + toString(this._elementOf_)
            + toString(this._setIdentifier_)
            + toString(this._suchAs_)
            + toString(this._expression_)
            + toString(this._rightBrace_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._leftBrace_ == child)
        {
            this._leftBrace_ = null;
            return;
        }

        if(this._elementIdentifier_ == child)
        {
            this._elementIdentifier_ = null;
            return;
        }

        if(this._elementOf_ == child)
        {
            this._elementOf_ = null;
            return;
        }

        if(this._setIdentifier_ == child)
        {
            this._setIdentifier_ = null;
            return;
        }

        if(this._suchAs_ == child)
        {
            this._suchAs_ = null;
            return;
        }

        if(this._expression_ == child)
        {
            this._expression_ = null;
            return;
        }

        if(this._rightBrace_ == child)
        {
            this._rightBrace_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._leftBrace_ == oldChild)
        {
            setLeftBrace((TLeftBrace) newChild);
            return;
        }

        if(this._elementIdentifier_ == oldChild)
        {
            setElementIdentifier((TElementIdentifier) newChild);
            return;
        }

        if(this._elementOf_ == oldChild)
        {
            setElementOf((TElementOf) newChild);
            return;
        }

        if(this._setIdentifier_ == oldChild)
        {
            setSetIdentifier((TSetIdentifier) newChild);
            return;
        }

        if(this._suchAs_ == oldChild)
        {
            setSuchAs((TSuchAs) newChild);
            return;
        }

        if(this._expression_ == oldChild)
        {
            setExpression((PExpression) newChild);
            return;
        }

        if(this._rightBrace_ == oldChild)
        {
            setRightBrace((TRightBrace) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
